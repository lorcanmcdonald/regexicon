#!/bin/bash
set -euo pipefail
IFS=$'\n\t'

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )/.."

# shellcheck source=script/Prelude
source "$DIR/script/Prelude"

"$DIR/script/update"
GHC_VERSION=8.8.3

run_haskell() {
  set +u
  docker run \
      --rm \
      -ti \
      -e LC_ALL=C.UTF-8 \
      -v "$DIR/:/opt/build" \
      -v "$DIR/obj/cabal-sandbox:/opt/build/.cabal-sandbox" \
      -v "$DIR/obj/dist-newstyle:/opt/build/dist-newstyle" \
      -v "$DIR/obj/cabal-store:/appuser/.cabal/store" \
      -v "$DIR/obj/cabal-packages:/appuser/.cabal/packages" \
      -w /opt/build \
      lorcan/haskell-build:$GHC_VERSION \
        $1 $2 $3 $4 $5 $6 $7 $8 $9
  set -u
}

set +e
run_haskell sh -c 'PATH=$PATH:/opt/build/bin cabal new-update && TASTY_QUICKCHECK_TESTS=20 cabal new-test --enable-coverage' \
 && run_haskell hpc markup \
  /opt/build/dist-newstyle/build/x86_64-linux/ghc-$GHC_VERSION/Matching-0.1.0.0/hpc/vanilla/tix/test-matching/test-matching.tix \
  /opt/build/dist-newstyle/build/x86_64-linux/ghc-$GHC_VERSION/Matching-0.1.0.0/hpc/vanilla/tix/Matching-0.1.0.0/Matching-0.1.0.0.tix \
  "--destdir=/opt/build/dist-newstyle/build/x86_64-linux/ghc-$GHC_VERSION/Matching-0.1.0.0/hpc/vanilla/html/Matching-0.1.0.0" \
  "--hpcdir=dist-newstyle/build/x86_64-linux/ghc-$GHC_VERSION/Matching-0.1.0.0/hpc/vanilla/mix/Matching-0.1.0.0" \
  "--hpcdir=dist-newstyle/build/x86_64-linux/ghc-$GHC_VERSION/Matching-0.1.0.0/hpc/vanilla/mix/test-matching" \
  "--hpcdir=dist-newstyle/build/x86_64-linux/ghc-$GHC_VERSION/Matching-0.1.0.0/hpc/vanilla/mix/Matching-0.1.0.0/Matching-0.1.0.0-inplace/Matching.Server.Views.mix"

run_haskell sh -c 'find dist-newstyle -name "*.mix" | xargs rm'
set -e
